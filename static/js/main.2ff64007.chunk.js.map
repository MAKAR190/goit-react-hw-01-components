{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendListItem/FriendListItem.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHIstory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","props","className","styles","profile","description","src","avatar","alt","name","tag","location","stats","label","quantity","followers","views","likes","Statistics","statistics","title","list","map","obj","key","id","num","percentage","FriendListItem","isOnline","item","isNotOnline","width","FriendList","friendList","friends","friend","TransactionHistory","transactionHistory","thead","tbody","items","type","amount","currency","App","user","statisticsData","friendsData","transactionsData","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ff64007.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1h7_z\",\"description\":\"Profile_description__3z8kn\",\"avatar\":\"Profile_avatar__2lWoP\",\"name\":\"Profile_name__21LWZ\",\"tag\":\"Profile_tag__2PtKV\",\"stats\":\"Profile_stats__3LFTw\",\"label\":\"Profile_label__3Sozf\",\"quantity\":\"Profile_quantity__2xWcS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2Gbi1\",\"name\":\"FriendListItem_name__1IfTf\",\"avatar\":\"FriendListItem_avatar__2sv91\",\"isOnline\":\"FriendListItem_isOnline__1uQQa\",\"isNotOnline\":\"FriendListItem_isNotOnline__35XFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__15msa\",\"title\":\"Statistics_title__oZQ0j\",\"list\":\"Statistics_list__1Yoaq\",\"num\":\"Statistics_num__240g_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thead\":\"TransactionHistory_thead__3i7ys\",\"transactionHistory\":\"TransactionHistory_transactionHistory__9OVa5\",\"item\":\"TransactionHistory_item__1H2sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__MBsry\"};","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nfunction Profile(props) {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={props.avatar} alt=\"user avatar\" className={styles.avatar} />\r\n        <p className={styles.name}>{props.name}</p>\r\n        <p className={styles.tag}>{props.tag}</p>\r\n        <p className={styles.tag}>{props.location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}> {props.stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}> {props.stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}> {props.stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nfunction Statistics(props) {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {props.title && <h2 className={styles.title}>{props.title}</h2>}\r\n      <ul className={styles.list}>\r\n        {props.stats.map((obj) => (\r\n          <li key={obj.id}>\r\n            <span>{obj.label}</span>\r\n            <span className={styles.num}>{obj.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport styles from './FriendListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\nfunction FriendListItem({avatar,isOnline,name}) {\r\n    return (\r\n        <li className={styles.item}>\r\n            <span className={isOnline ? styles.isOnline : styles.isNotOnline}></span>\r\n            <img className={styles.avatar} src={avatar} alt=\"avatar\" width=\"48\" />\r\n            <p className={styles.name}>{name}</p>\r\n        </li>\r\n    )\r\n}\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n}\r\nexport default FriendListItem;","import React from \"react\";\r\nimport styles from \"./FriendList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\nfunction FriendList(props) {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {props.friends.map((friend) => (\r\n          <FriendListItem avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} key={friend.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\nfunction TransactionHistory(props) {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead className={styles.thead}>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody className={styles.tbody}>\r\n        {props.items.map((item) => (\r\n          <tr className={styles.item} key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport user from \"./components/Profile/user.json\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport statisticsData from \"./components/Statistics/statistics-data.json\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\nimport friendsData from \"./components/FriendList/FriendList.json\";\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHIstory\";\r\nimport transactionsData from \"./components/TransactionHistory/transactions.json\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        avatar={user.avatar}\r\n        location={user.location}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload Stats\" stats={statisticsData} />\r\n      <FriendList friends={friendsData} />\r\n      <TransactionHistory items={transactionsData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}